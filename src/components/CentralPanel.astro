---
import "../styles/SideBar.css";
import "../styles/Layout.css";
import "../styles/SearchBar.css";
import Footer from "./Footer.astro";
---

<div id="center-panel">
  <Footer />
</div>

<script>
  import { getColor } from "@/scripts/getColor";
  import { loadSpotifyPlayer } from "@/scripts/player";
  import { spotifyPlayerAction } from "@/scripts/spotifyPlayerAction";
  const root = document.getElementById("center-panel");

  async function renderHome() {
    // root.innerHTML = `<p>Selecciona un álbum...</p>`;
    const html = await fetch(`/partials/centerPanel/main`).then((r) => {
      if (!r.ok) throw new Error("Album not found");
      return r.text();
    });

    root.innerHTML = html;
    addEventNavArtist(".artist-favorite");
  }
  function addEventNavArtist(btnClass: string) {
    const buttons = document.querySelectorAll(btnClass);
    buttons.forEach((btn) => {
      btn.addEventListener("click", () => {
        const artistId = btn.dataset.artistId;
        window.dispatchEvent(
          new CustomEvent("nav:artist", { detail: { artistId } })
        );
      });
    });
  }
  function addEventNavAlbum(btnClass) {
    const buttons = document.querySelectorAll(btnClass);
    buttons.forEach((btn) => {
      btn.addEventListener("click", () => {
        const albumId = btn.dataset.albumId;
        window.dispatchEvent(
          new CustomEvent("nav:album", { detail: { albumId } })
        );
      });
    });
  }
  function addEventTopResults() {
    const btnElementTopResult = document.querySelector(".top-result");
    const btnTopResultUriSong = btnElementTopResult.dataset.topResultSong;
    document.querySelector(".playSong").onclick = async function () {
      await spotifyPlayerAction("play", {
        uris: [btnTopResultUriSong],
        deviceId: window.deviceId,
      });
    };

    ///
    const parseJSON = (s, fb = null) => {
      try {
        return JSON.parse(s);
      } catch {
        return fb;
      }
    };

    const isSameTrack = (a, b) => {
      if (!a || !b) return false;
      if (a.id !== b.id) return false;
      if (a.name !== b.name) return false;
      if (a.album?.id !== b.album?.id) return false;
      if ((a.artists?.length || 0) !== (b.artists?.length || 0)) return false;
      return a.artists.every((art, i) => art.id === b.artists[i].id);
    };

    const buttons = Array.from(
      document.querySelectorAll(".playSong-top-songs")
    );
    const lastPlayed = parseJSON(localStorage.getItem("lastPlayedTrack"));

    const matchedBtn = lastPlayed
      ? buttons.find((btn) => {
          const data = parseJSON(btn.dataset.track);
          return isSameTrack(data, lastPlayed);
        })
      : null;

    if (matchedBtn) {
      console.log(
        "Hay coincidencia con el último guardado:",
        matchedBtn.dataset.track
      );
    }

    buttons.forEach((btn) => {
      const trackData = parseJSON(btn.dataset.track);

      btn.onclick = async () => {
        trackData.class = "playSong-top-songs";
        localStorage.setItem("lastPlayedTrack", JSON.stringify(trackData));

        const uri = btn.dataset.trackUri;
        try {
          await spotifyPlayerAction("play", {
            uris: [uri],
            deviceId: window.deviceId,
          });
        } catch (e) {
          console.error("Error al reproducir:", e);
        }
      };
    });

    ///
    document.querySelectorAll(".playSong-Artists-Carrousel").forEach((btn) => {
      btn.onclick = async () => {
        const uri = btn.dataset.trackArtist;
        console.log(uri);
        await spotifyPlayerAction("play", {
          context_uri: uri,
        });
      };
    });
    document.querySelectorAll(".playSong-Album-Carrousel").forEach((btn) => {
      btn.onclick = async () => {
        const uri = btn.dataset.trackAlbum;
        console.log(uri);
        await spotifyPlayerAction("play", {
          context_uri: uri,
        });
      };
    });

    // document.querySelector("pauseSong").onclick = async function () {
    //   await spotifyPlayerAction("pause");
    // };
  }
  async function renderAlbumById(albumId) {
    root.innerHTML = `<p>Cargando álbum ${albumId}...</p>`;
    try {
      const html = await fetch(`/partials/album/${albumId}`).then((r) => {
        if (!r.ok) throw new Error("Album not found");
        return r.text();
      });

      root.innerHTML = html;

      const titleElement = document.querySelector(".album-title");
      const albumName = titleElement?.dataset.albumName;
      const el = document.querySelector(".album-artist");
      const artistName = el?.dataset.artistName;
      const res = await fetch(
        `/api/genius/artist-bio?q=${encodeURIComponent(artistName)}`
      );
      const { bio } = await res.json();

      root.querySelectorAll(".track-btn").forEach((btn) => {
        btn.addEventListener("click", () => {
          const artists = JSON.parse(btn.dataset.trackArtists);

          window.dispatchEvent(
            new CustomEvent("ui:track", {
              detail: {
                albumId: btn.dataset.albumId,
                trackId: btn.dataset.trackId,
                trackName: btn.dataset.trackName,
                imgAlbum: btn.dataset.imgAlbum,
                artistImg: btn.dataset.imgArtist,
                trackArtists: artists,
                bioArtist: bio,
                artistName: artistName,
                albumName: albumName,
              },
            })
          );
        });
      });

      document.getElementById("playSong").onclick = async function () {
        const track_uri = JSON.parse(
          document.querySelector(".btn-play")?.dataset.tracksAlbum
        );
        await spotifyPlayerAction("play", {
          uris: track_uri,
          deviceId: window.deviceId,
        });
      };

      document.getElementById("pauseSong").onclick = async function () {
        await spotifyPlayerAction("pause");
      };
      /////////
    } catch (e) {
      root.innerHTML = `<p>Error cargando álbum.</p>`;
      console.error(e);
    }
  }

  async function renderArtistById(artistId) {
    root.innerHTML = `<p>Cargando artista ${artistId}...</p>`;

    try {
      const html = await fetch(`/partials/artist/${artistId}`).then((r) => {
        if (!r.ok) throw new Error("Artist not found");
        return r.text();
      });

      root.innerHTML = html;
      getColor();
    } catch (e) {
      root.innerHTML = `<p>Error cargando álbum.</p>`;
      console.error(e);
    }

    //
  }

  async function renderSearch(searchQuery) {
    root.innerHTML = `<p>Procesando busqueda ${searchQuery}...</p>`;

    try {
      const html = await fetch(`/partials/search/${searchQuery}`).then((r) => {
        if (!r.ok) throw new Error("Search not found");
        return r.text();
      });

      root.innerHTML = html;
      addEventNavArtist(".artist-with-search");
      addEventNavAlbum(".btn-album-go-to");
      addEventTopResults();
      // getColor();
    } catch (e) {
      root.innerHTML = `<p>Error.</p>`;
      console.error(e);
    }
  }
  window.addEventListener("route:home", renderHome);
  window.addEventListener("route:album", (e) => {
    const { albumId } = e.detail;
    renderAlbumById(albumId);
  });
  window.addEventListener("route:artist", (e) => {
    const { artistId } = e.detail;
    renderArtistById(artistId);
  });
  window.addEventListener("route:search", (e) => {
    const { searchQuery } = e.detail;
    renderSearch(searchQuery);
  });
</script>
