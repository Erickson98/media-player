---
import "../styles/SideBar.css";
import "../styles/Layout.css";
import "../styles/SearchBar.css";
import Footer from "./Footer.astro";
---

<div id="center-panel">
  <Footer />
</div>

<script>
  import { getColor } from "@/scripts/getColor";
  import { loadSpotifyPlayer } from "@/scripts/player";
  import { getSpotifyToken } from "../utils/get-spotify-token";
  const root = document.getElementById("center-panel");

  async function renderHome() {
    // root.innerHTML = `<p>Selecciona un 치lbum...</p>`;
    const html = await fetch(`/partials/centerPanel/main`).then((r) => {
      if (!r.ok) throw new Error("Album not found");
      return r.text();
    });

    root.innerHTML = html;
    addEventNavArtist(".artist-favorite");
  }
  function addEventNavArtist(btnClass: string) {
    const buttons = document.querySelectorAll(btnClass);
    buttons.forEach((btn) => {
      btn.addEventListener("click", () => {
        const artistId = btn.dataset.artistId;
        window.dispatchEvent(
          new CustomEvent("nav:artist", { detail: { artistId } })
        );
      });
    });
  }
  function addEventNavAlbum(btnClass) {
    const buttons = document.querySelectorAll(btnClass);
    buttons.forEach((btn) => {
      btn.addEventListener("click", () => {
        const albumId = btn.dataset.albumId;
        window.dispatchEvent(
          new CustomEvent("nav:album", { detail: { albumId } })
        );
      });
    });
  }
  async function renderAlbumById(albumId) {
    root.innerHTML = `<p>Cargando 치lbum ${albumId}...</p>`;
    try {
      const html = await fetch(`/partials/album/${albumId}`).then((r) => {
        if (!r.ok) throw new Error("Album not found");
        return r.text();
      });

      root.innerHTML = html;

      const titleElement = document.querySelector(".album-title");
      const albumName = titleElement?.dataset.albumName;
      const el = document.querySelector(".album-artist");
      const artistName = el?.dataset.artistName;
      const res = await fetch(
        `/api/genius/artist-bio?q=${encodeURIComponent(artistName)}`
      );
      const { bio } = await res.json();

      root.querySelectorAll(".track-btn").forEach((btn) => {
        btn.addEventListener("click", () => {
          const artists = JSON.parse(btn.dataset.trackArtists);

          window.dispatchEvent(
            new CustomEvent("ui:track", {
              detail: {
                albumId: btn.dataset.albumId,
                trackId: btn.dataset.trackId,
                trackName: btn.dataset.trackName,
                imgAlbum: btn.dataset.imgAlbum,
                artistImg: btn.dataset.imgArtist,
                trackArtists: artists,
                bioArtist: bio,
                artistName: artistName,
                albumName: albumName,
              },
            })
          );
        });
      });

      document.getElementById("playSong").onclick = async function () {
        const track_uri = JSON.parse(
          document.querySelector(".btn-play")?.dataset.tracksAlbum
        );

        const res = await fetch(
          `https://api.spotify.com/v1/me/player/play?device_id=${window.deviceId}`,
          {
            method: "PUT",
            body: JSON.stringify({ uris: track_uri }),
            headers: {
              "Content-Type": "application/json",
              Authorization: `Bearer ${await getSpotifyToken()}`,
            },
          }
        );
        if (res.status === 204) {
          // alert("Playback started!");
        } else {
          // TODO: IF FAIL, FETCH TOKEN TO FIND DEVICEID
          const data = await res.json();
          alert("Failed: " + JSON.stringify(data));
        }
      };

      document.getElementById("pauseSong").onclick = async function () {
        await fetch("https://api.spotify.com/v1/me/player/pause", {
          method: "PUT",
          headers: {
            Authorization: `Bearer ${token}`,
          },
        });
        console.log("Playback paused via Web API!");
      };
      /////////
    } catch (e) {
      root.innerHTML = `<p>Error cargando 치lbum.</p>`;
      console.error(e);
    }
  }

  async function renderArtistById(artistId) {
    root.innerHTML = `<p>Cargando artista ${artistId}...</p>`;

    try {
      const html = await fetch(`/partials/artist/${artistId}`).then((r) => {
        if (!r.ok) throw new Error("Artist not found");
        return r.text();
      });

      root.innerHTML = html;
      getColor();
    } catch (e) {
      root.innerHTML = `<p>Error cargando 치lbum.</p>`;
      console.error(e);
    }

    //
  }

  async function renderSearch(searchQuery) {
    root.innerHTML = `<p>Procesando busqueda ${searchQuery}...</p>`;

    try {
      const html = await fetch(`/partials/search/${searchQuery}`).then((r) => {
        if (!r.ok) throw new Error("Search not found");
        return r.text();
      });

      root.innerHTML = html;
      debugger;
      addEventNavArtist(".artist-with-search");
      addEventNavAlbum(".btn-album-go-to");
      // getColor();
    } catch (e) {
      root.innerHTML = `<p>Error.</p>`;
      console.error(e);
    }
  }
  window.addEventListener("route:home", renderHome);
  window.addEventListener("route:album", (e) => {
    const { albumId } = e.detail;
    renderAlbumById(albumId);
  });
  window.addEventListener("route:artist", (e) => {
    const { artistId } = e.detail;
    renderArtistById(artistId);
  });
  window.addEventListener("route:search", (e) => {
    const { searchQuery } = e.detail;
    renderSearch(searchQuery);
  });
</script>
