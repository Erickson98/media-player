---
const { tracks } = Astro.props;
function formatDuration(ms: number) {
  const m = Math.floor(ms / 60000);
  const s = Math.floor((ms % 60000) / 1000)
    .toString()
    .padStart(2, "0");
  return `${m}:${s}`;
}
---

<div style="display: flex; gap:5px;">
  <div class="container-for-play" style="flex:0.8;position:relative;">
    <h2>Top Results</h2>
    <div style="padding: 20px; border-radius: 7px; background: #3a3a3a57;">
      <img
        src={tracks?.items[0]?.album?.images[0]?.url}
        alt=""
        srcset=""
        width="92"
        height="92"
      />
      <h2>{tracks?.items[0]?.name}</h2>
      <span
        >Song * {
          tracks?.items[0]?.artists.map((artist) => (
            <a
              href={`/artist/${artist.id}`}
              target="_blank"
              rel="noopener noreferrer"
            >
              {artist?.name}
            </a>
          ))
        }</span
      >
    </div>
    <button
      class="btn-hidden top-result playSong"
      data-top-result-song={tracks.items[0].uri}>▶</button
    >
  </div>
  <div style="flex:1;padding-right: 10px;">
    <h2>Songs</h2>
    <ul
      style="display: flex; flex-direction: column; gap:15px;padding:10px;margin:0px;"
    >
      {
        tracks.items.slice(0, 4).map((track) => (
          <li style="display:flex;width: 100%;gap: 10px;">
            <div class="image-container">
              <img
                src={track?.album?.images[0]?.url}
                alt=""
                srcset=""
                width="40"
                height="40"
              />
              <div class="overlay">
                <button
                  class="btn-top-tracks playSong-top-songs"
                  data-track-uri={track.uri}
                  data-track={JSON.stringify({
                    id: track.id,
                    uri: track.uri,
                    name: track.name,
                    album: {
                      id: track.album.id,
                      name: track.album.name,
                      images: track.album.images,
                    },
                    artists: track.artists.map((a) => ({
                      id: a.id,
                      name: a.name,
                    })),
                  })}
                >
                  <span>▶</span>
                </button>
              </div>
            </div>
            <div style="justify-content: space-between;display: flex;flex: 1;">
              <div style="display: flex; flex-direction: column;">
                <span>{track?.name}</span>
                <span>{track?.artists?.map((a) => a?.name).join(", ")}</span>
              </div>
              <span>{formatDuration(track?.duration_ms)}</span>
            </div>
          </li>
        ))
      }
    </ul>
  </div>
</div>

<style>
  .btn-hidden {
    position: absolute;
    right: 0;
    transform: translate(-20px, -60px);
    background: #0077ff;
    color: white;
    border: none;
    padding: 12px 24px;
    border-radius: 6px;
    cursor: pointer;
    transition:
      bottom 0.4s ease,
      opacity 0.4s ease;
    opacity: 0;
    border: none;
    border-radius: 50%;
    width: 10px;
    height: 30px;
    font-size: 20px;
    cursor: pointer;
    margin-right: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .container-for-play:hover .btn-hidden {
    opacity: 1;
  }
  .image-container {
    position: relative;
    width: 40px;
    height: 40px;
    overflow: hidden;
    border-radius: 8px;
    cursor: pointer;
  }

  .image-container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.4s ease;
  }

  .overlay i {
    font-size: 10px;
    color: white;
  }

  .image-container:hover .overlay {
    opacity: 1;
  }
</style>
