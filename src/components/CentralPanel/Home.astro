---
const { tracks, artists } = Astro.props;
---

<style>
  .top-Elements-Home-View {
    background: #0077ff;
    color: white;
    padding: 9px 20px;
    transition:
      bottom 0.4s ease,
      opacity 0.4s ease;
    opacity: 0;
    border: none;
    border-radius: 50%;
    width: 10px;
    height: 30px;
    font-size: 20px;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    transform: translate(-60px, 0px);
  }
  .transform-viewPlay-button-top {
    /* top: 21px; */
  }
  .transform-viewPlay-button-bottom {
    /* top: 87px; */
  }
  .card:hover .top-Elements-Home-View {
    opacity: 1;
  }
  .wrapper-ellipse-text-format {
    container-type: inline-size;
    container-name: cards;
    width: 100%;
    margin: auto;
  }

  .ellipse-text-format {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    margin-bottom: 8px;
    overflow: hidden;
    overflow-wrap: anywhere;
    text-overflow: ellipsis;
    font-size: medium;
  }
  @container cards (min-width: 236px) {
    .ellipse-text-format {
      background: lightblue;
      font-size: large;
    }
  }
  @container cards (max-width: 102px) {
    .ellipse-text-format {
      background: rgb(0, 0, 0);
      font-size: small;
    }
  }
  .wrapper-for-grid8 {
    width: 100%;
    container-type: inline-size;
    container-name: grid8;
  }
  .grid8 {
    display: grid;
    gap: 16px;
    padding: 20px 20px 0 20px;
    /* Desktop: 4 columnas => con 8 items quedan 2 filas */
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
  @container grid8 (max-width: 940px) {
    .grid8 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
</style>
<div class="wrapper-for-grid8">
  <div class="grid8">
    {
      tracks.items?.map((item) => (
        <div class="card">
          <img
            src={item.album.images[2].url}
            loading="lazy"
            decoding="async"
            alt=""
            srcset=""
            width="50"
          />
          <div style="display: flex;flex:1; justify-content: space-between; height:100%">
            <div class="wrapper-ellipse-text-format">
              <span class="ellipse-text-format">{item.album.name}</span>
            </div>
            <div>
              <button
                class="top-Elements-Home-View transform-viewPlay-button-top playSong-Album-Carrousel"
                data-track-album={item.album.uri}
                data-track={JSON.stringify({
                  id: item.album.id,
                  uri: item.album.uri,
                  name: item.album.name,
                  album: {
                    id: item.album.id,
                    name: item.album.name,
                    images: item.album.images,
                  },
                  imgAlbum: item.album.images,
                  artists: item.artists.map((a) => ({
                    id: a.id,
                    name: a.name,
                  })),
                })}
              >
                <img
                  src="/play.svg"
                  alt="play icon"
                  loading="lazy"
                  decoding="async"
                  data-state="play"
                  class={`btn-hidden-pause-${item.album.id}`}
                />
              </button>
            </div>
          </div>
        </div>
      ))
    }
    {
      artists.items?.map((item) => (
        <div class="card">
          <img
            src={item.images[2].url}
            alt=""
            srcset=""
            loading="lazy"
            decoding="async"
            width="50"
          />

          <div style="display: flex;flex:1; justify-content: space-between; height:100%">
            <div class="wrapper-ellipse-text-format">
              <span class="ellipse-text-format">{item.name}</span>
            </div>
            <div>
              <button
                class="top-Elements-Home-View transform-viewPlay-button-bottom playSong-Artists-Carrousel"
                data-track-album={item.uri}
                data-track={JSON.stringify({
                  id: item.id,
                  uri: item.uri,
                  name: item.name,
                })}
              >
                <img
                  src="/play.svg"
                  alt="play icon"
                  data-state="play"
                  class={`btn-hidden-pause-${item.id}`}
                  loading="lazy"
                  decoding="async"
                />
              </button>
            </div>
          </div>
        </div>
      ))
    }
  </div>
</div>
