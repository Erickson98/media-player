---
import PlayIcon from "src/assets/icons/play.svg?url";
const { tracks, artists } = Astro.props;
---

<div class="grid8">
  {
    tracks.items?.map((item) => (
      <div class="card">
        <img src={item.album.images[2].url} alt="" srcset="" width="50" />
        <div style="display: flex;flex:1; justify-content: space-between;">
          <span>{item.album.name}</span>
          <button
            class="btn-hidden playSong-Album-Carrousel"
            data-track-album={item.album.uri}
            data-track={JSON.stringify({
              id: item.album.id,
              uri: item.album.uri,
              name: item.album.name,
              album: {
                id: item.album.id,
                name: item.album.name,
                images: item.album.images,
              },
              imgAlbum: item.album.images,
              artists: item.artists.map((a) => ({
                id: a.id,
                name: a.name,
              })),
            })}
          >
            <img
              src={PlayIcon}
              alt="play icon"
              data-state="play"
              class={`btn-hidden-pause-${item.album.id}`}
            />
          </button>
        </div>
      </div>
    ))
  }
  {
    artists.items?.map((item) => (
      <div class="card">
        <img src={item.images[2].url} alt="" srcset="" width="50" />

        <div style="display: flex;flex:1; justify-content: space-between;">
          <span>{item.name}</span>
          <button
            class="btn-hidden playSong-Artists-Carrousel"
            data-track-album={item.uri}
            data-track={JSON.stringify({
              id: item.id,
              uri: item.uri,
              name: item.name,
            })}
          >
            <img
              src={PlayIcon}
              alt="play icon"
              data-state="play"
              class={`btn-hidden-pause-${item.id}`}
            />
          </button>
        </div>
      </div>
    ))
  }
</div>

<style>
  .grid8 {
    display: grid;
    gap: 16px;
    /* Desktop: 4 columnas => con 8 items quedan 2 filas */
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  /* Tablet: opcional (3 columnas) */
  @media (max-width: 900px) {
    .grid8 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  /* MÃ³vil: 2 columnas => con 8 items quedan 4 filas */
  @media (max-width: 600px) {
    .grid8 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .title {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    margin-bottom: 8px;
    overflow: hidden;
    overflow-wrap: anywhere;
    text-overflow: ellipsis;
  }

  .card {
    background: #1f1f1f;
    color: #fff;
    border-radius: 8px;

    display: flex;
    gap: 8px;
    align-items: center;
    font:
      589 14px/1.2 system-ui,
      sans-serif;
  }
  .card:hover .btn-hidden {
    opacity: 1;
  }
  .btn-hidden {
    margin: 0px;
    position: initial;
    transform: translate(0px, 0px);
  }
</style>
