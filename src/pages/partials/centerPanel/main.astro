---
import Home from "src/components/CentralPanel/Home.astro";
import AlbumCarrousel from "src/components/AlbumCarrousel.astro";
import ArtistCarrousel from "src/components/ArtistCarrousel.astro";
import MightLike from "src/components/CentralPanel/MightLike.astro";

const headers = new Headers({ Accept: "application/json" });
const cookie = Astro.request.headers.get("cookie");
if (cookie) headers.set("cookie", cookie);

// URLs centralizadas
const endpoints = {
  tracks: "/api/spotify/me/top/tracks?time_range=short_term&limit=4",
  artists: "/api/spotify/me/top/artists?time_range=short_term&limit=4",
  newRelease: "/api/spotify/browse/new-releases?limit=10",
  throwBack: "/api/spotify/me/albums?limit=10&offset=6",
  yourFavoriteArtists: "/api/spotify/me/top/artists?limit=10",
};

// Ejecutar todas las peticiones en paralelo
const [resTracks, resArtists, resNewRelease, resThrowBack, resYourFav] =
  await Promise.all([
    fetch(new URL(endpoints.tracks, Astro.url), { headers }),
    fetch(new URL(endpoints.artists, Astro.url), { headers }),
    fetch(new URL(endpoints.newRelease, Astro.url), { headers }),
    fetch(new URL(endpoints.throwBack, Astro.url), { headers }),
    fetch(new URL(endpoints.yourFavoriteArtists, Astro.url), { headers }),
  ]);

// Validar errores pero sin romper toda la página
function safeJson(response, label) {
  if (!response.ok) {
    console.error(`❌ Error al cargar ${label}: status ${response.status}`);
    return null;
  }
  return response.json();
}

const [tracks, artists, newRelease, throwBack, yourFavoriteArtists] =
  await Promise.all([
    safeJson(resTracks, "tracks"),
    safeJson(resArtists, "artists"),
    safeJson(resNewRelease, "new releases"),
    safeJson(resThrowBack, "throwback"),
    safeJson(resYourFav, "your favorite artists"),
  ]);

// Astro.response.headers.set("Content-Type", "text/html; charset=utf-8");
---

<Home tracks={tracks ?? { items: [] }} artists={artists ?? { items: [] }} />
<AlbumCarrousel
  album={newRelease?.albums ?? { items: [] }}
  title="New Release"
/>
<MightLike album={throwBack ?? { items: [] }} title="Throwback" />
<ArtistCarrousel artists={yourFavoriteArtists ?? { items: [] }} />
<!-- <Footer /> -->
